(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const s of e)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function i(e){const s={};return e.integrity&&(s.integrity=e.integrity),e.referrerPolicy&&(s.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?s.credentials="include":e.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(e){if(e.ep)return;e.ep=!0;const s=i(e);fetch(e.href,s)}})();class H{constructor(){this.keys={}}keyDown(t){this.keys[t.key]=!0}keyUp(t){this.keys[t.key]=!1}isKeyDown(t){return!!this.keys[t]}}class T{constructor(t,i){this.moveCooldown=30,this.lastMoveTime=0,this.moveSpeed=.16,this.gridX=t,this.gridY=i}isColliding(t,i){return t.x<i.x+i.width&&t.x+t.width>i.x&&t.y<i.y+i.height&&t.y+t.height>i.y}getBounds(){return{x:this.gridX,y:this.gridY,width:1,height:1}}getCollisionResolution(t,i){const n=t.x+t.width/2,e=t.y+t.height/2,s=i.x+i.width/2,o=i.y+i.height/2,r=n-s,d=e-o,l=(t.width+i.width)/2,g=(t.height+i.height)/2,f=l-Math.abs(r),u=g-Math.abs(d);return f<u?{x:r<0?-f:f,y:0}:{x:0,y:d<0?-u:u}}update(t,i,n){const e=performance.now();if(e-this.lastMoveTime<this.moveCooldown)return;let s=0,o=0;if(t.isKeyDown("ArrowUp")&&(s+=-1,o+=-1),t.isKeyDown("ArrowDown")&&(s+=1,o+=1),t.isKeyDown("ArrowLeft")&&(s+=-1,o+=1),t.isKeyDown("ArrowRight")&&(s+=1,o+=-1),s===0&&o===0)return;const r=Math.sqrt(s*s+o*o),d=s/r,l=o/r,g=this.moveSpeed,f=1/3,u=i.map[0].length-2,w=i.map.length-2,x=this.gridX+d*g,b=this.gridY+l*g;let p=this.gridX,m=this.gridY;const A={x,y:this.gridY,width:1,height:1};let y=!1;for(const a of n??[])if(a!==this&&"getBounds"in a&&typeof a.getBounds=="function"){const Y=a.getBounds();if(this.isColliding(A,Y)){y=!0;break}}y?p=this.gridX:p=x;const L=y?this.gridY+l*g*f:b,B={x:p,y:L,width:1,height:1};let k=!1;for(const a of n??[])if(a!==this&&"getBounds"in a&&typeof a.getBounds=="function"){const Y=a.getBounds();if(this.isColliding(B,Y)){k=!0;break}}k?m=this.gridY:m=L,p=Math.max(0,Math.min(p,u)),m=Math.max(0,Math.min(m,w)),this.gridX=p,this.gridY=m,this.lastMoveTime=e}render(t,i,n){const e=t.canvas.width/2,s=50,o=e+(this.gridX-this.gridY)*(i/2),r=s+(this.gridX+this.gridY)*(n/2);t.fillStyle="#FFD700",t.beginPath(),t.arc(o,r+n/2,10,0,Math.PI*2),t.fill()}}class W{constructor(t=[]){this.entities=t}addEntity(t){Array.isArray(t)?this.entities.push(...t):this.entities.push(t)}update(t,i){for(const n of this.entities)n instanceof T?n.update(t,i,this.entities):n.update(t,i)}render(t,i,n){this.entities.sort((e,s)=>{const o=e.gridX+e.gridY,r=s.gridX+s.gridY;return o-r}),this.entities.forEach(e=>{e.render(t,i,n)})}}class P{constructor(t,i,n){this.tileWidth=32,this.tileHeight=32,this.gridX=t,this.gridY=i;const e=Math.floor(Math.random()*n.length);this.image=n[e]}update(t,i){}getBounds(){return{x:this.gridX,y:this.gridY,width:.5,height:.5}}render(t,i,n){const e=t.canvas.width/2,s=50,o=e+(this.gridX-this.gridY)*(i/2),r=s+(this.gridX+this.gridY)*(n/2);t.drawImage(this.image,o-this.tileWidth/2,r-this.tileHeight/2,this.tileWidth,this.tileHeight)}}class D{constructor(t){this.tileWidth=40,this.tileHeight=20,this.images=t,this.map=this.generateMap()}generateMap(){const n=[];for(let e=0;e<19;e++){const s=[];for(let o=0;o<19;o++){let r;const d=e===18&&o===0,l=e===0&&o===18,g=e===18,f=o===18,u=e===18&&o===18;if(d)r="edgeTopLeft";else if(l)r="edgeTopRight";else if(u)r="edgeCenter";else if(g)r="edgeLeft";else if(f)r="edgeRight";else{const w=["grass1","grass2","grass3"];r=w[Math.floor(Math.random()*w.length)]}s.push(r)}n.push(s)}return n}render(t){const i=t.canvas.width/2,n=50;for(let e=0;e<this.map.length;e++)for(let s=0;s<this.map[e].length;s++){const o=this.map[e][s],r=this.images[o];if(!r)continue;const d=i+(s-e)*(this.tileWidth/2),l=n+(s+e)*(this.tileHeight/2);t.drawImage(r,d-this.tileWidth/2,l,this.tileWidth,this.tileHeight)}}}function I(h){const t=new D(h.tiles),i=new W([new T(9,9)]),n=[];for(let e=0;e<18;e++)for(let s=0;s<18;s++)if(Math.random()<.02){const o=new P(s,e,Object.values(h.rocks));n.push(o)}return i.addEntity(n),{tileMap:t,entities:i}}class K{constructor(t,i){this.lastTime=0,this.input=new H,this.ctx=t,this.assets=i;const{tileMap:n,entities:e}=I(i);this.tileMap=n,this.entities=e,window.addEventListener("keydown",s=>this.input.keyDown(s)),window.addEventListener("keyup",s=>this.input.keyUp(s))}start(){requestAnimationFrame(t=>this.loop(t))}loop(t){const i=(t-this.lastTime)/1e3;this.lastTime=t,this.update(i),this.render(),requestAnimationFrame(n=>this.loop(n))}update(t){this.entities.update(this.input,this.tileMap)}render(){this.ctx.clearRect(0,0,800,600),this.tileMap.render(this.ctx),this.entities.render(this.ctx,this.tileMap.tileWidth,this.tileMap.tileHeight)}}async function E(h){const t={},i=Object.entries(h).map(([n,e])=>new Promise((s,o)=>{const r=new Image;r.src=e,r.onload=()=>{t[n]=r,s()},r.onerror=()=>o(`Failed to load image: ${e}`)}));return await Promise.all(i),t}async function O(){const h=await E(F),t=await E(q);return{tiles:h,rocks:t}}const F={grass1:"assets/tiles/grass1.png",grass2:"assets/tiles/grass2.png",grass3:"assets/tiles/grass3.png",edgeLeft:"assets/tiles/edgeLeft.png",edgeTopLeft:"assets/tiles/edgeTopLeft.png",edgeRight:"assets/tiles/edgeRight.png",edgeTopRight:"assets/tiles/edgeTopRight.png",edgeCenter:"assets/tiles/edgeCenter.png"},q={rock1:"assets/obstacles/rock1.png"},c=document.createElement("canvas"),M=800,v=600;c.width=M;c.height=v;c.style.position="relative";c.style.imageRendering="pixelated";function R(){const h=Math.min(window.innerWidth/M,window.innerHeight/v);c.style.width=`${M*h}px`,c.style.height=`${v*h}px`}R();window.addEventListener("resize",R);const X=document.getElementById("board");X==null||X.appendChild(c);const C=c.getContext("2d");if(!C)throw new Error("Canvas context not available");O().then(h=>{new K(C,h).start()});
